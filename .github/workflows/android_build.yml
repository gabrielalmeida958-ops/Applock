name: Android Build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17 for Android SDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android packages
        run: |
          sdkmanager --install \
            "platform-tools" \
            "platforms;android-30" "build-tools;30.0.3" \
            "platforms;android-29" "build-tools;29.0.3"
          yes | sdkmanager --licenses

      - name: Unzip project
        run: unzip -q AppLockerMVP_camuflado.zip -d project

      - name: Detect AGP version
        id: detect
        run: |
          cd project
          AGP_VER=$(grep -RhoE 'com\.android\.tools\.build:gradle:[0-9]+\.[0-9]+(\.[0-9]+)?' \
            | head -n1 | sed -E 's/.*gradle:([0-9]+\.[0-9]+(\.[0-9]+)?).*/\1/')
          echo "agp=$AGP_VER" >> $GITHUB_OUTPUT

      - name: Pick Gradle and JDK from AGP
        id: pick
        run: |
          AGP="${{ steps.detect.outputs.agp }}"
          gradle_ver="7.2"
          jdk_ver="11"
          if [[ -z "$AGP" ]]; then
            gradle_ver="7.2"
            jdk_ver="11"
          elif [[ "$AGP" == 8.* ]]; then
            gradle_ver="8.1.1"
            jdk_ver="17"
          elif [[ "$AGP" == 7.4* ]]; then
            gradle_ver="7.5.1"
            jdk_ver="11"
          elif [[ "$AGP" == 7.* ]]; then
            gradle_ver="7.2"
            jdk_ver="11"
          elif [[ "$AGP" == 4.2* ]]; then
            gradle_ver="6.7.1"
            jdk_ver="11"
          else
            gradle_ver="6.5"
            jdk_ver="8"
          fi
          echo "gradle=$gradle_ver" >> $GITHUB_OUTPUT
          echo "jdk=$jdk_ver" >> $GITHUB_OUTPUT

      - name: Set up JDK for build
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ steps.pick.outputs.jdk }}

      - name: Install Gradle via SDKMAN
        run: |
          curl -s https://get.sdkman.io | bash
          bash -lc "source $HOME/.sdkman/bin/sdkman-init.sh && sdk install gradle ${{ steps.pick.outputs.gradle }}"
          echo 'export PATH="$HOME/.sdkman/candidates/gradle/current/bin:$PATH"' >> $GITHUB_ENV

      - name: Ensure Gradle wrapper
        working-directory: project
        run: |
          if [ ! -f gradlew ]; then
            gradle wrapper --gradle-version ${{ steps.pick.outputs.gradle }}
          fi

      - name: Build Debug APK
        working-directory: project
        run: |
          if [ -x ./gradlew ]; then
            ./gradlew --no-daemon assembleDebug --stacktrace --info
          else
            gradle   --no-daemon assembleDebug --stacktrace --info
          fi

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: project/app/build/outputs/apk/debug/*.apk
